product-name: cf
product-properties:
  .cloud_controller.allow_app_ssh_access:
    value: ((cloud_controller/allow_app_ssh_access))
  .cloud_controller.apps_domain:
    value: ((cloud_controller/apps_domain))
  .cloud_controller.default_app_memory:
    value: ((cloud_controller/default_app_memory))
  .cloud_controller.default_app_ssh_access:
    value: ((cloud_controller/default_app_ssh_access))
  .cloud_controller.default_disk_quota_app:
    value: ((cloud_controller/default_disk_quota_app))
  .cloud_controller.default_quota_max_number_services:
    value: ((cloud_controller/default_quota_max_number_services))
  .cloud_controller.default_quota_memory_limit_mb:
    value: ((cloud_controller/default_quota_memory_limit_mb))
  .cloud_controller.enable_custom_buildpacks:
    value: ((cloud_controller/enable_custom_buildpacks))
  .cloud_controller.max_disk_quota_app:
    value: ((cloud_controller/max_disk_quota_app))
  .cloud_controller.max_file_size:
    value: ((cloud_controller/max_file_size))
  .cloud_controller.max_package_size:
    value: ((cloud_controller/max_package_size))
  .cloud_controller.security_event_logging_enabled:
    value: ((cloud_controller/security_event_logging_enabled))
  .cloud_controller.staging_timeout_in_seconds:
    value: ((cloud_controller/staging_timeout_in_seconds))
  .cloud_controller.system_domain:
    value: ((cloud_controller/system_domain))
  .diego_brain.starting_container_count_maximum:
    value: ((diego_brain/starting_container_count_maximum))
  .diego_cell.insecure_docker_registry_list:
    value: ((diego_cell/insecure_docker_registry_list))
  .mysql.cli_history:
    value: ((mysql/cli_history))
  .mysql.innodb_buffer_pool_size_percent:
    value: ((mysql/innodb_buffer_pool_size_percent))
  .mysql.max_connections:
    value: ((mysql/max_connections))
  .mysql.prevent_node_auto_rejoin:
    value: ((mysql/prevent_node_auto_rejoin))
  .mysql.remote_admin_access:
    value: ((mysql/remote_admin_access))
  .mysql_monitor.recipient_email:
    value: ((mysql_monitor/recipient_email))
  .mysql_proxy.enable_inactive_mysql_port:
    value: ((mysql_proxy/enable_inactive_mysql_port))
  .mysql_proxy.shutdown_delay:
    value: ((mysql_proxy/shutdown_delay))
  .mysql_proxy.startup_delay:
    value: ((mysql_proxy/startup_delay))
  .nfs_server.blobstore_internal_access_rules:
    value: ((nfs_server/blobstore_internal_access_rules))
  .properties.allow_srt_to_ert_upgrade:
    value: ((properties/allow_srt_to_ert_upgrade))
  .properties.app_graceful_shutdown_period_in_seconds:
    value: ((properties/app_graceful_shutdown_period_in_seconds))
  .properties.app_log_rate_limiting:
    selected_option: disable
    value: ((properties/app_log_rate_limiting))
  .properties.autoscale_api_disable_connection_pooling:
    value: ((properties/autoscale_api_disable_connection_pooling))
  .properties.autoscale_api_instance_count:
    value: ((properties/autoscale_api_instance_count))
  .properties.autoscale_enable_notifications:
    value: ((properties/autoscale_enable_notifications))
  .properties.autoscale_enable_verbose_logging:
    value: ((properties/autoscale_enable_verbose_logging))
  .properties.autoscale_instance_count:
    value: ((properties/autoscale_instance_count))
  .properties.autoscale_metric_bucket_count:
    value: ((properties/autoscale_metric_bucket_count))
  .properties.autoscale_scaling_interval_in_seconds:
    value: ((properties/autoscale_scaling_interval_in_seconds))
  .properties.cc_api_rate_limit:
    selected_option: disable
    value: ((properties/cc_api_rate_limit))
  .properties.cc_logging_level:
    value: ((properties/cc_logging_level))
  .properties.ccdb_connection_validation_timeout:
    value: ((properties/ccdb_connection_validation_timeout))
  .properties.ccdb_read_timeout:
    value: ((properties/ccdb_read_timeout))
  .properties.ccdb_restore:
    selected_option: disable
    value: ((properties/ccdb_restore))
  .properties.ccng_monit_http_healthcheck_timeout_per_retry:
    value: ((properties/ccng_monit_http_healthcheck_timeout_per_retry))
  .properties.cf_networking_database_connection_timeout:
    value: ((properties/cf_networking_database_connection_timeout))
  .properties.cf_networking_enable_space_developer_self_service:
    value: ((properties/cf_networking_enable_space_developer_self_service))
  .properties.cf_networking_internal_domains:
    value:
      - name: apps.internal
  .properties.cf_networking_search_domains:
    value: ((properties/cf_networking_search_domains))
  .properties.cloud_controller_app_log_revision:
    value: ((properties/cloud_controller_app_log_revision))
  .properties.cloud_controller_audit_events_cutoff_age_in_days:
    value: ((properties/cloud_controller_audit_events_cutoff_age_in_days))
  .properties.cloud_controller_completed_tasks_cutoff_age_in_days:
    value: ((properties/cloud_controller_completed_tasks_cutoff_age_in_days))
  .properties.cloud_controller_default_health_check_timeout:
    value: ((properties/cloud_controller_default_health_check_timeout))
  .properties.cloud_controller_default_log_rate_limit_app:
    value: ((properties/cloud_controller_default_log_rate_limit_app))
  .properties.cloud_controller_instance_file_descriptor_limit:
    value: ((properties/cloud_controller_instance_file_descriptor_limit))
  .properties.cloud_controller_number_of_local_workers:
    value: ((properties/cloud_controller_number_of_local_workers))
  .properties.cloud_controller_post_bbr_healthcheck_timeout_in_seconds:
    value: ((properties/cloud_controller_post_bbr_healthcheck_timeout_in_seconds))
  .properties.cloud_controller_prometheus_enabled:
    value: ((properties/cloud_controller_prometheus_enabled))
  .properties.cloud_controller_puma:
    selected_option: disable
    value: ((properties/cloud_controller_puma))
  .properties.cloud_controller_stacks:
    selected_option: fs4_only_option
    value: ((properties/cloud_controller_stacks))
  .properties.cloud_controller_statsd_enabled:
    value: ((properties/cloud_controller_statsd_enabled))
  .properties.cloud_controller_temporary_disable_deployments:
    value: ((properties/cloud_controller_temporary_disable_deployments))
  .properties.cloud_controller_worker_alert_if_above_mb:
    value: ((properties/cloud_controller_worker_alert_if_above_mb))
  .properties.cloud_controller_worker_restart_if_above_mb:
    value: ((properties/cloud_controller_worker_restart_if_above_mb))
  .properties.cloud_controller_worker_restart_if_consistently_above_mb:
    value: ((properties/cloud_controller_worker_restart_if_consistently_above_mb))
  .properties.container_networking:
    selected_option: enable
    value: ((properties/container_networking))
  .properties.container_networking_interface_plugin:
    selected_option: external
    value: ((properties/container_networking_interface_plugin))
  .properties.credhub_database:
    selected_option: internal_mysql
    value: ((properties/credhub_database))
  .properties.credhub_hsm_provider_client_certificate:
    value: {}
  .properties.credhub_hsm_provider_partition_password:
    value: {}
  .properties.credhub_internal_provider_keys:
    value:
      - key:
          secret: mureallhylongpassword
        name: general
        primary: true
  .properties.default_loggregator_drain_metadata:
    value: ((properties/default_loggregator_drain_metadata))
  .properties.diego_database_max_open_connections:
    value: ((properties/diego_database_max_open_connections))
  .properties.disable_diego_cells:
    value: ((properties/disable_diego_cells))
  .properties.disable_logs_in_firehose:
    value: ((properties/disable_logs_in_firehose))
  .properties.enable_cpu_throttling:
    value: ((properties/enable_cpu_throttling))
  .properties.enable_garden_containerd_mode:
    value: ((properties/enable_garden_containerd_mode))
  .properties.enable_smb_volume_driver:
    value: ((properties/enable_smb_volume_driver))
  .properties.enable_smb_volume_driver_force_nodfs:
    value: ((properties/enable_smb_volume_driver_force_nodfs))
  .properties.enable_smb_volume_driver_force_noserverino:
    value: ((properties/enable_smb_volume_driver_force_noserverino))
  .properties.enable_tls_to_internal_pxc:
    value: ((properties/enable_tls_to_internal_pxc))
  .properties.enable_v1_firehose:
    value: ((properties/enable_v1_firehose))
  .properties.enable_v2_firehose:
    value: ((properties/enable_v2_firehose))
  .properties.garden_disk_cleanup:
    selected_option: reserved
    value: ((properties/garden_disk_cleanup))
  .properties.garden_disk_cleanup.reserved.reserved_space_for_other_jobs_in_mb:
    value: ((properties/garden_disk_cleanup/reserved/reserved_space_for_other_jobs_in_mb))
  .properties.gorouter_customize_metrics_reporting:
    selected_option: disable
    value: ((properties/gorouter_customize_metrics_reporting))
  .properties.gorouter_ssl_ciphers:
    value: ((properties/gorouter_ssl_ciphers))
  .properties.isolated_routing:
    selected_option: accept_all
    value: ((properties/isolated_routing))
  .properties.locket_database_max_open_connections:
    value: ((properties/locket_database_max_open_connections))
  .properties.log_cache_max_per_source:
    value: ((properties/log_cache_max_per_source))
  .properties.metric_registrar_blacklisted_tags:
    value: ((properties/metric_registrar_blacklisted_tags))
  .properties.metric_registrar_enabled:
    value: ((properties/metric_registrar_enabled))
  .properties.metric_registrar_max_metrics_per_instance:
    value: ((properties/metric_registrar_max_metrics_per_instance))
  .properties.metric_registrar_scrape_interval_in_seconds:
    value: ((properties/metric_registrar_scrape_interval_in_seconds))
  .properties.mtls_log_cache:
    selected_option: tls
    value: ((properties/mtls_log_cache))
  .properties.mysql_activity_logging:
    selected_option: enable
    value: ((properties/mysql_activity_logging))
  .properties.mysql_activity_logging.enable.audit_logging_events:
    value: ((properties/mysql_activity_logging/enable/audit_logging_events))
  .properties.nats_enabled_endpoints:
    selected_option: https
    value: ((properties/nats_enabled_endpoints))
  .properties.networking_poe_ssl_certs:
    value:
      - certificate:
          cert_pem: |-
            ((properties/networking_poe_ssl_certs_0_cert_pem))
          private_key_pem: |-
            ((properties/networking_poe_ssl_certs_0_private_key_pem))
        name: wildcard-15may2025
  .properties.networkpolicyserver_database_max_open_connections:
    value: ((properties/networkpolicyserver_database_max_open_connections))
  .properties.networkpolicyserver_max_policies_per_app_source:
    value: ((properties/networkpolicyserver_max_policies_per_app_source))
  .properties.networkpolicyserverinternal_database_max_open_connections:
    value: ((properties/networkpolicyserverinternal_database_max_open_connections))
  .properties.nfs_volume_driver:
    selected_option: disable
    value: ((properties/nfs_volume_driver))
  .properties.otel_collector_beta_features_enabled:
    value: ((properties/otel_collector_beta_features_enabled))
  .properties.policy_server_asg_syncer_interval:
    value: ((properties/policy_server_asg_syncer_interval))
  .properties.push_apps_manager_accent_color:
    value: '((properties/push_apps_manager_accent_color))'
  .properties.push_apps_manager_app_poll_interval:
    value: ((properties/push_apps_manager_app_poll_interval))
  .properties.push_apps_manager_buildpack:
    value: ((properties/push_apps_manager_buildpack))
  .properties.push_apps_manager_cf_cli_packages:
    selected_option: cf_cli_v8
    value: ((properties/push_apps_manager_cf_cli_packages))
  .properties.push_apps_manager_company_name:
    value: ((properties/push_apps_manager_company_name))
  .properties.push_apps_manager_currency_lookup:
    value: '((properties/push_apps_manager_currency_lookup))'
  .properties.push_apps_manager_display_plan_prices:
    value: ((properties/push_apps_manager_display_plan_prices))
  .properties.push_apps_manager_enable_invitations:
    value: ((properties/push_apps_manager_enable_invitations))
  .properties.push_apps_manager_global_wrapper_bg_color:
    value: '((properties/push_apps_manager_global_wrapper_bg_color))'
  .properties.push_apps_manager_global_wrapper_text_color:
    value: '((properties/push_apps_manager_global_wrapper_text_color))'
  .properties.push_apps_manager_invitations_buildpack:
    value: ((properties/push_apps_manager_invitations_buildpack))
  .properties.push_apps_manager_nav_links:
    value:
      - href: https://techdocs.broadcom.com/us/en/vmware-tanzu/platform/tanzu-platform-for-cloud-foundry/10-0/tpcf/concepts-overview.html
        name: Docs
      - href: /tools
        name: Tools
  .properties.push_apps_manager_poll_interval:
    value: ((properties/push_apps_manager_poll_interval))
  .properties.push_apps_manager_search_server_buildpack:
    value: ((properties/push_apps_manager_search_server_buildpack))
  .properties.push_usage_service_cutoff_age_in_days:
    value: ((properties/push_usage_service_cutoff_age_in_days))
  .properties.route_integrity:
    selected_option: tls_verify
    value: ((properties/route_integrity))
  .properties.route_services:
    selected_option: enable
    value: ((properties/route_services))
  .properties.route_services.enable.ignore_ssl_cert_verification:
    value: ((properties/route_services/enable/ignore_ssl_cert_verification))
  .properties.route_services.enable.internal_lookup:
    value: ((properties/route_services/enable/internal_lookup))
  .properties.route_services.enable.internal_server_port:
    value: ((properties/route_services/enable/internal_server_port))
  .properties.router_backend_max_conn:
    value: ((properties/router_backend_max_conn))
  .properties.router_balancing_algorithm:
    selected_option: round_robin
    value: ((properties/router_balancing_algorithm))
  .properties.router_balancing_algorithm_az_preference:
    selected_option: none
    value: ((properties/router_balancing_algorithm_az_preference))
  .properties.router_client_cert_validation:
    selected_option: none
    value: ((properties/router_client_cert_validation))
  .properties.router_enable_log_attempt_details:
    value: ((properties/router_enable_log_attempt_details))
  .properties.router_enable_proxy:
    value: ((properties/router_enable_proxy))
  .properties.router_keepalive_connections:
    selected_option: enable
    value: ((properties/router_keepalive_connections))
  .properties.router_only_trust_client_ca_certs:
    selected_option: disable
    value: ((properties/router_only_trust_client_ca_certs))
  .properties.router_redact_query_parameters:
    selected_option: none
    value: ((properties/router_redact_query_parameters))
  .properties.router_sticky_session_cookie_names:
    value:
      - name: JSESSIONID
  .properties.router_sticky_sessions_for_auth_negotiate:
    value: ((properties/router_sticky_sessions_for_auth_negotiate))
  .properties.routing_api_enabled_api_endpoints:
    selected_option: mtls
    value: ((properties/routing_api_enabled_api_endpoints))
  .properties.routing_custom_ca_certificates:
    value: |-
      ((properties/routing_custom_ca_certificates))
  .properties.routing_disable_http:
    value: ((properties/routing_disable_http))
  .properties.routing_log_client_ips:
    selected_option: log_client_ips
    value: ((properties/routing_log_client_ips))
  .properties.routing_tls_termination:
    selected_option: router
    value: ((properties/routing_tls_termination))
  .properties.routing_tls_version_range:
    selected_option: tls_v1_1_v1_3
    value: ((properties/routing_tls_version_range))
  .properties.saml_signature_algorithm:
    value: ((properties/saml_signature_algorithm))
  .properties.secure_service_instance_credentials:
    value: false
  .properties.security_acknowledgement:
    value: ((properties/security_acknowledgement))
  .properties.service_discovery_controller_staleness_threshold:
    value: ((properties/service_discovery_controller_staleness_threshold))
  .properties.silk_database_max_open_connections:
    value: ((properties/silk_database_max_open_connections))
  .properties.smoke_tests:
    selected_option: on_demand
    value: ((properties/smoke_tests))
  .properties.smtp_auth_mechanism:
    value: ((properties/smtp_auth_mechanism))
  .properties.smtp_credentials:
    value: {}
  .properties.smtp_enable_starttls_auto:
    value: ((properties/smtp_enable_starttls_auto))
  .properties.syslog_drop_debug:
    value: ((properties/syslog_drop_debug))
  .properties.syslog_host:
    value: ((properties/syslog_host))
  .properties.syslog_protocol:
    value: ((properties/syslog_protocol))
  .properties.syslog_tls:
    selected_option: disabled
    value: ((properties/syslog_tls))
  .properties.syslog_use_tcp_for_file_forwarding_local_transport:
    value: ((properties/syslog_use_tcp_for_file_forwarding_local_transport))
  .properties.system_blobstore:
    selected_option: internal
    value: ((properties/system_blobstore))
  .properties.system_blobstore_backup_level:
    selected_option: all
    value: ((properties/system_blobstore_backup_level))
  .properties.system_blobstore_ccdroplet_max_staged_droplets_stored:
    value: ((properties/system_blobstore_ccdroplet_max_staged_droplets_stored))
  .properties.system_blobstore_ccpackage_max_valid_packages_stored:
    value: ((properties/system_blobstore_ccpackage_max_valid_packages_stored))
  .properties.system_database:
    selected_option: internal_pxc
    value: ((properties/system_database))
  .properties.system_metrics_scraper_scrape_interval:
    value: ((properties/system_metrics_scraper_scrape_interval))
  .properties.tcp_routing:
    selected_option: disable
    value: ((properties/tcp_routing))
  .properties.uaa:
    selected_option: ldap
    value: ((properties/uaa))
  .properties.uaa.ldap.credentials:
    value:
      identity: CN=svc bind,OU=Service Accounts,DC=ragazzilab,DC=com
      password: VMware1!
  .properties.uaa.ldap.first_name_attribute:
    value: ((properties/uaa/ldap/first_name_attribute))
  .properties.uaa.ldap.group_max_search_depth:
    value: ((properties/uaa/ldap/group_max_search_depth))
  .properties.uaa.ldap.group_search_base:
    value: ((properties/uaa/ldap/group_search_base))
  .properties.uaa.ldap.group_search_filter:
    value: ((properties/uaa/ldap/group_search_filter))
  .properties.uaa.ldap.ldap_referrals:
    value: ((properties/uaa/ldap/ldap_referrals))
  .properties.uaa.ldap.mail_attribute_name:
    value: ((properties/uaa/ldap/mail_attribute_name))
  .properties.uaa.ldap.search_base:
    value: ((properties/uaa/ldap/search_base))
  .properties.uaa.ldap.search_filter:
    value: ((properties/uaa/ldap/search_filter))
  .properties.uaa.ldap.server_ssl_cert:
    value: |-
      ((properties/uaa/ldap/server_ssl_cert))
  .properties.uaa.ldap.url:
    value: ((properties/uaa/ldap/url))
  .properties.uaa_database:
    selected_option: internal_mysql
    value: ((properties/uaa_database))
  .properties.uaa_internal_users_password_policies:
    selected_option: default_policies
    value: default_policies
  .properties.uaa_session_cookie_max_age:
    value: ((properties/uaa_session_cookie_max_age))
  .properties.uaa_session_idle_timeout:
    value: ((properties/uaa_session_idle_timeout))
  .properties.vxlan_policy_agent_asg_update_interval:
    value: ((properties/vxlan_policy_agent_asg_update_interval))
  .router.disable_insecure_cookies:
    value: ((router/disable_insecure_cookies))
  .router.drain_timeout:
    value: ((router/drain_timeout))
  .router.drain_wait:
    value: ((router/drain_wait))
  .router.enable_http1_concurrent_read_write:
    value: ((router/enable_http1_concurrent_read_write))
  .router.enable_http2:
    value: ((router/enable_http2))
  .router.enable_nontls_health_checks:
    value: ((router/enable_nontls_health_checks))
  .router.enable_w3c:
    value: ((router/enable_w3c))
  .router.enable_write_access_logs:
    value: ((router/enable_write_access_logs))
  .router.enable_zipkin:
    value: ((router/enable_zipkin))
  .router.frontend_idle_timeout:
    value: ((router/frontend_idle_timeout))
  .router.lb_healthy_threshold:
    value: ((router/lb_healthy_threshold))
  .router.max_header_kb:
    value: ((router/max_header_kb))
  .router.request_timeout_in_seconds:
    value: ((router/request_timeout_in_seconds))
  .uaa.apps_manager_access_token_lifetime:
    value: ((uaa/apps_manager_access_token_lifetime))
  .uaa.cf_cli_access_token_lifetime:
    value: ((uaa/cf_cli_access_token_lifetime))
  .uaa.cf_cli_refresh_token_lifetime:
    value: ((uaa/cf_cli_refresh_token_lifetime))
  .uaa.customize_password_label:
    value: Password
  .uaa.customize_username_label:
    value: ((uaa/customize_username_label))
  .uaa.enable_uri_encoding_compatibility_mode:
    value: ((uaa/enable_uri_encoding_compatibility_mode))
  .uaa.enforce_system_zone_policy_in_all_zones:
    value: ((uaa/enforce_system_zone_policy_in_all_zones))
  .uaa.proxy_ips_regex:
    value: ((uaa/proxy_ips_regex))
  .uaa.service_provider_key_credentials:
    value:
      cert_pem: |-
        ((uaa/service_provider_key_credentials_cert_pem))
      private_key_pem: |-
        ((uaa/service_provider_key_credentials_private_key_pem))
  .uaa.service_provider_key_password:
    value: {}
network-properties:
  network:
    name: ((network-properties/network/name))
  other_availability_zones:
    - name: ((network-properties/other_availability_zones_0/name))
  singleton_availability_zone:
    name: ((network-properties/singleton_availability_zone/name))
resource-config:
  backup_restore:
    max_in_flight: ((resource-config/backup_restore/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/backup_restore/instance_type_id))
    instances: ((resource-config/backup_restore/instances))
    nsxt:
      lb:
        server_pools: []
      ns_groups: []
      vif_type: null
    persistent_disk:
      name: ((resource-config/backup_restore/persistent_disk_name))
      size_mb: ((resource-config/backup_restore/persistent_disk_size_mb))
    swap_as_percent_of_memory_size: ((resource-config/backup_restore/swap_as_percent_of_memory_size))
  blobstore:
    max_in_flight: ((resource-config/blobstore/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/blobstore/instance_type_id))
    instances: ((resource-config/blobstore/instances))
    nsxt:
      lb:
        server_pools: []
      ns_groups: []
      vif_type: null
    persistent_disk:
      name: ((resource-config/blobstore/persistent_disk_name))
      size_mb: ((resource-config/blobstore/persistent_disk_size_mb))
    swap_as_percent_of_memory_size: ((resource-config/blobstore/swap_as_percent_of_memory_size))
  compute:
    max_in_flight: ((resource-config/compute/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/compute/instance_type_id))
    instances: ((resource-config/compute/instances))
    nsxt:
      lb:
        server_pools: []
      ns_groups: []
      vif_type: null
    swap_as_percent_of_memory_size: ((resource-config/compute/swap_as_percent_of_memory_size))
  control:
    max_in_flight: ((resource-config/control/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/control/instance_type_id))
    instances: ((resource-config/control/instances))
    nsxt:
      lb:
        server_pools:
          - name: ((resource-config/control/nsxt_lb_server_pools_0_name))
            port: "((resource-config/control/nsxt_lb_server_pools_0_port))"
      ns_groups: []
      vif_type: null
    swap_as_percent_of_memory_size: ((resource-config/control/swap_as_percent_of_memory_size))
  database:
    max_in_flight: ((resource-config/database/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/database/instance_type_id))
    instances: ((resource-config/database/instances))
    nsxt:
      lb:
        server_pools: []
      ns_groups: []
      vif_type: null
    persistent_disk:
      name: ((resource-config/database/persistent_disk_name))
      size_mb: ((resource-config/database/persistent_disk_size_mb))
    swap_as_percent_of_memory_size: ((resource-config/database/swap_as_percent_of_memory_size))
  mysql_monitor:
    max_in_flight: ((resource-config/mysql_monitor/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/mysql_monitor/instance_type_id))
    instances: ((resource-config/mysql_monitor/instances))
    nsxt:
      lb:
        server_pools: []
      ns_groups: []
      vif_type: null
    swap_as_percent_of_memory_size: ((resource-config/mysql_monitor/swap_as_percent_of_memory_size))
  router:
    max_in_flight: ((resource-config/router/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/router/instance_type_id))
    instances: ((resource-config/router/instances))
    nsxt:
      lb:
        server_pools:
          - name: ((resource-config/router/nsxt_lb_server_pools_0_name))
            port: null
      ns_groups: []
      vif_type: null
    swap_as_percent_of_memory_size: ((resource-config/router/swap_as_percent_of_memory_size))
  tcp_router:
    max_in_flight: ((resource-config/tcp_router/max_in_flight))
    additional_networks: []
    additional_vm_extensions: []
    avi:
      pools: []
    instance_type:
      id: ((resource-config/tcp_router/instance_type_id))
    instances: ((resource-config/tcp_router/instances))
    nsxt:
      lb:
        server_pools:
          - name: ((resource-config/tcp_router/nsxt_lb_server_pools_0_name))
            port: null
      ns_groups: []
      vif_type: null
    swap_as_percent_of_memory_size: ((resource-config/tcp_router/swap_as_percent_of_memory_size))
errand-config:
  deploy-autoscaler:
    post-deploy-state: ((errand-config/deploy-autoscaler/post-deploy-state))
  deploy-notifications:
    post-deploy-state: ((errand-config/deploy-notifications/post-deploy-state))
  deploy-notifications-ui:
    post-deploy-state: ((errand-config/deploy-notifications-ui/post-deploy-state))
  metric_registrar_smoke_test:
    post-deploy-state: ((errand-config/metric_registrar_smoke_test/post-deploy-state))
  nfsbrokerpush:
    post-deploy-state: ((errand-config/nfsbrokerpush/post-deploy-state))
  push-apps-manager:
    post-deploy-state: ((errand-config/push-apps-manager/post-deploy-state))
  push-offline-docs:
    post-deploy-state: ((errand-config/push-offline-docs/post-deploy-state))
  push-usage-service:
    post-deploy-state: ((errand-config/push-usage-service/post-deploy-state))
  rotate_cc_database_key:
    post-deploy-state: ((errand-config/rotate_cc_database_key/post-deploy-state))
  smbbrokerpush:
    post-deploy-state: ((errand-config/smbbrokerpush/post-deploy-state))
  smoke_tests:
    post-deploy-state: ((errand-config/smoke_tests/post-deploy-state))
  test-autoscaling:
    post-deploy-state: ((errand-config/test-autoscaling/post-deploy-state))
